svgfile "conv_circle_4.svg";

import "merge_ctrl.cif";
import "entry_sending_protocol.cif";
import "Cdef.cif";

input bool s_PEC_0;
input bool s_PEC_1;
input bool s_PEC_2;
input bool s_PEC_3;
input bool s_PEC_4;

input tuple (bool next_reset_ES, R2S, TIP) entry_tpl;

alg int[0..1] a_motor_0 = ctrl.ctrl0.a_motor_int;
alg int[0..1] a_motor_1 = ctrl.ctrl1.a_motor_int;
alg int[0..1] a_motor_2 = ctrl.ctrl2.a_motor_int;
alg int[0..1] a_motor_3 = ctrl.ctrl3.a_motor_int;
alg int[0..1] a_motor_4 = ctrl.ctrl4.a_motor_int;

alg bool ctrl0_R2R = ctrl.ctrl0.R2R;

event product ec0;

group ctrl:
event product c0c4_c1,  c1c2,  c2c3,  c3c4,  dummy;

    mrg_c: MergeControl(ctrl0.next_reset_ES, ctrl0.R2S, ctrl4.next_reset_ES, ctrl4.R2S, ctrl0.TIP or ctrl4.TIP, ctrl1.R2R);

    ctrl0: Control(0, s_PEC_0, entry_tpl[next_reset_ES], entry_tpl[R2S], entry_tpl[TIP], mrg_c.R2R_zero, ec0, c0c4_c1);

    ctrl1: Control(1, s_PEC_1,     mrg_c.next_reset_ES,      mrg_c.R2S,      mrg_c.TIP,  ctrl2.R2R,  c0c4_c1, c1c2   );
    ctrl2: Control(2, s_PEC_2,     ctrl1.next_reset_ES,      ctrl1.R2S,      ctrl1.TIP,  ctrl3.R2R,     c1c2, c2c3   );
    ctrl3: Control(3, s_PEC_3,     ctrl2.next_reset_ES,      ctrl2.R2S,      ctrl2.TIP,  ctrl4.R2R,     c2c3, c3c4   );

    ctrl4: Control(4, s_PEC_4,     ctrl3.next_reset_ES,      ctrl3.R2S,      ctrl3.TIP,  mrg_c.R2R_one, c3c4, c0c4_c1);

    ctrl5: ExitControl(                                                                                         dummy);
end
