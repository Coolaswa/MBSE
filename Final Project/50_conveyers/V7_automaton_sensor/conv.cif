import "../svg_def.cif";

group def Conveyer(alg int nr; alg real xinit; alg int a_motor; event void e_sprev_off!, e_s_on!, e_recv?, e_send!):
    automaton conv:
        cont x = xinit;

        location WaitBox:
            initial x = -1.0;
            equation x' = 0.0;

            edge e_recv?        do x := 0.0                 goto WaitPrevSensor;

        location WaitPrevSensor:
            equation x' = a_motor * 1.0;

            edge e_sprev_off!   when x >= 3                 goto WaitSensor;

        location WaitSensor:
            initial x >= 3;
            equation x' = a_motor * 1.0;

            edge e_s_on!        when x >= 5                 goto WaitLeave;

        location WaitLeave:
            equation x' = a_motor * 1.0;

            edge e_send!        when x >= 6 and a_motor > 0
                                do x := -1.0                goto WaitBox;
    end

    svg: Conv_SVG(nr, <string>conv, conv.x);
end


group def ExitConveyer(alg int nr; event void e_sprev_off!; event void e_recv?):
    automaton conv:
        cont x = -1.0;

        // PRIVATE
        event toWaitBox;

        location WaitBox:
            initial;
            equation x' = 0.0;

            edge e_recv?        do x := 0.0     goto WaitPrevSensor;

        location WaitPrevSensor:
            equation x' = 1.0;

            edge e_sprev_off!   when x >= 3.0   goto WaitBoxTail;

        location WaitBoxTail:
            equation x' = 1.0;

            edge toWaitBox      when x >= 4
                                do x := -1.0    goto WaitBox;
    end

    svg: Exit_SVG(nr, conv.x);
end
